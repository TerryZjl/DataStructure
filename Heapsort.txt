void AdJustDown(int* a, int i, size_t n)
{
	int Parent = i;
	int Child = i * 2 + 1;
	while (Child<n)
	{
		if (Child<(n - 1) && a[Child]< a[Child + 1])
		{
			++Child;
		}
		if (a[Parent]< a[Child])
		{
			swap(a[Child], a[Parent]);
			Parent = Child;
			Child = Parent * 2 + 1;
		}
		else
		{
			break;
		}
	}
}


//¶ÑÅÅÉýÐò-½¨´ó¶Ñ
void HeapSort(int* a , int n)
{
	
	for (int i = (n - 2) / 2; i >= 0; --i)
	{
		AdJustDown(a, i, n);
	}

	int cur = n;
	while (cur>0)
	{
		swap(a[0], a[cur-1]);
		--cur;
		AdJustDown(a, 0, cur);
	}
}

void TestHeapSort()
{
	int a[] = { 10, 11, 13, 12, 16, 18, 15, 17, 14, 19 };
	HeapSort(a, 10);
	int i = 0;
}